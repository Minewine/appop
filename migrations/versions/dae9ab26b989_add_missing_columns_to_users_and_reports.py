"""Add missing columns to users and reports

Revision ID: dae9ab26b989
Revises: 
Create Date: 2025-04-14 15:17:29.789767

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dae9ab26b989'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('login_attempts', schema=None) as batch_op:
        batch_op.drop_index('ix_login_attempts_timestamp')

    op.drop_table('login_attempts')
    with op.batch_alter_table('tokens', schema=None) as batch_op:
        batch_op.drop_index('ix_tokens_token')

    op.drop_table('tokens')
    with op.batch_alter_table('api_requests', schema=None) as batch_op:
        batch_op.drop_index('ix_api_requests_timestamp')

    op.drop_table('api_requests')
    with op.batch_alter_table('activity_logs', schema=None) as batch_op:
        batch_op.drop_index('ix_activity_logs_timestamp')

    op.drop_table('activity_logs')
    with op.batch_alter_table('report_keywords', schema=None) as batch_op:
        batch_op.drop_index('ix_report_keywords_keyword')

    op.drop_table('report_keywords')
    op.drop_table('user_preferences')
    op.drop_table('report_feedback')
    with op.batch_alter_table('reports', schema=None) as batch_op:
        batch_op.add_column(sa.Column('score', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('is_public', sa.Boolean(), nullable=True))
        batch_op.alter_column('jd_filename',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('analysis_type',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('result',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('last_login_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('role', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('status', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('api_key', sa.String(length=128), nullable=True))
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=120),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=120),
               existing_nullable=True)
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=128),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
        batch_op.alter_column('password_hash',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=200),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.String(length=120),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.drop_column('api_key')
        batch_op.drop_column('status')
        batch_op.drop_column('role')
        batch_op.drop_column('last_login_at')

    with op.batch_alter_table('reports', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DATETIME(),
               nullable=True)
        batch_op.alter_column('result',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('analysis_type',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.alter_column('jd_filename',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
        batch_op.drop_column('is_public')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('score')

    op.create_table('report_feedback',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('report_id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('rating', sa.INTEGER(), nullable=True),
    sa.Column('comment', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_preferences',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('language', sa.VARCHAR(length=10), nullable=True),
    sa.Column('theme', sa.VARCHAR(length=20), nullable=True),
    sa.Column('notification_email', sa.BOOLEAN(), nullable=True),
    sa.Column('notification_web', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('report_keywords',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('report_id', sa.VARCHAR(length=36), nullable=False),
    sa.Column('keyword', sa.VARCHAR(length=100), nullable=False),
    sa.Column('category', sa.VARCHAR(length=50), nullable=True),
    sa.Column('frequency', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('report_id', 'keyword', name='unique_keyword_per_report')
    )
    with op.batch_alter_table('report_keywords', schema=None) as batch_op:
        batch_op.create_index('ix_report_keywords_keyword', ['keyword'], unique=False)

    op.create_table('activity_logs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('activity_type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('ip_address', sa.VARCHAR(length=45), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('resource_type', sa.VARCHAR(length=50), nullable=True),
    sa.Column('resource_id', sa.VARCHAR(length=50), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('activity_logs', schema=None) as batch_op:
        batch_op.create_index('ix_activity_logs_timestamp', ['timestamp'], unique=False)

    op.create_table('api_requests',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('endpoint', sa.VARCHAR(length=255), nullable=False),
    sa.Column('method', sa.VARCHAR(length=10), nullable=False),
    sa.Column('ip_address', sa.VARCHAR(length=45), nullable=True),
    sa.Column('user_agent', sa.VARCHAR(length=255), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('success', sa.BOOLEAN(), nullable=True),
    sa.Column('response_time', sa.FLOAT(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('api_requests', schema=None) as batch_op:
        batch_op.create_index('ix_api_requests_timestamp', ['timestamp'], unique=False)

    op.create_table('tokens',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('token', sa.VARCHAR(length=64), nullable=False),
    sa.Column('token_type', sa.VARCHAR(length=20), nullable=False),
    sa.Column('expires_at', sa.DATETIME(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('is_used', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tokens', schema=None) as batch_op:
        batch_op.create_index('ix_tokens_token', ['token'], unique=1)

    op.create_table('login_attempts',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), nullable=False),
    sa.Column('ip_address', sa.VARCHAR(length=45), nullable=True),
    sa.Column('user_agent', sa.VARCHAR(length=255), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('success', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('login_attempts', schema=None) as batch_op:
        batch_op.create_index('ix_login_attempts_timestamp', ['timestamp'], unique=False)

    # ### end Alembic commands ###
